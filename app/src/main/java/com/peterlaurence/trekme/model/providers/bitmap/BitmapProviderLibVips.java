package com.peterlaurence.trekme.model.providers.bitmap;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;

import com.peterlaurence.trekme.core.map.Map;
import com.peterlaurence.trekme.core.map.TileStreamProvider;
import com.qozix.tileview.graphics.BitmapProvider;
import com.qozix.tileview.tiles.Tile;

import java.io.File;
import java.io.InputStream;

/**
 * An implementation of {@link BitmapProvider}, able to read maps generated by LibVips.
 */
public class BitmapProviderLibVips implements BitmapProvider {
    public static final String GENERATOR_NAME = "VIPS";

    private TileStreamProvider mTileStreamProvider;

    private static final BitmapFactory.Options bitmapLoadingOptions = new BitmapFactory.Options();

    static {
        bitmapLoadingOptions.inPreferredConfig = Bitmap.Config.RGB_565;
    }

    public BitmapProviderLibVips(TileStreamProvider streamProvider) {
        mTileStreamProvider = streamProvider;
    }

    @Override
    public Bitmap getBitmap(Tile tile, Context context) {
        Object zoomLvl = tile.getData();
        if (zoomLvl instanceof Integer && mTileStreamProvider != null) {
            try {
                InputStream is = mTileStreamProvider.getTileStream(tile.getRow(), tile.getColumn(),
                        Integer.valueOf(zoomLvl.toString()));
                return BitmapFactory.decodeStream(is, null, bitmapLoadingOptions);
            } catch (OutOfMemoryError | Exception e) {
                // this is probably an out of memory error - we can try sleeping (this method won't
                // be called in the UI thread) or try again (or give up)
            }
        }
        return null;
    }
}
